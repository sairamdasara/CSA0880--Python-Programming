def maxProfit(prices):
    if not prices:
        return 0
    
    n = len(prices)
    
    # Step 1: Create an array to store the max profit up to each day with one transaction
    left_profits = [0] * n
    min_price = prices[0]
    for i in range(1, n):
        min_price = min(min_price, prices[i])
        left_profits[i] = max(left_profits[i - 1], prices[i] - min_price)
    
    # Step 2: Create an array to store the max profit from each day to the end with one transaction
    right_profits = [0] * n
    max_price = prices[-1]
    for i in range(n - 2, -1, -1):
        max_price = max(max_price, prices[i])
        right_profits[i] = max(right_profits[i + 1], max_price - prices[i])
    
    # Step 3: Combine the two results
    max_profit = 0
    for i in range(n):
        max_profit = max(max_profit, left_profits[i] + right_profits[i])
    
    return max_profit

# Test Case
prices = [7, 1, 5, 3, 6, 4]
print(maxProfit(prices))  # Output: 7
